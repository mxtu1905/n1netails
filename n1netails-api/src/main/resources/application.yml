spring.profiles.active: db, ai, oauth, email
spring.banner.location: classpath:banner.txt
server:
  port: ${PORT:9901}
  connection-timeout: -1
  max-http-header-size: -1

info:
  app:
    name: '@project.name@'
    description: '@project.description@'
    version: '@project.version@'

spring:
  jpa:
    defer-datasource-initialization: true
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format-sql: true
    repositories:
      bootstrap-mode: default
  web:
    resources:
      add-mappings: false

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    use-root-path: true

management:
  endpoints:
    web:
      exposure:
        include: health,info

n1netails:
  passkey:
    relying-party-id: ${N1NETAILS_PASSKEY_RELYING_PARTY_ID:localhost} # This should be your actual domain in production e.g. n1netails.com
    relying-party-name: "N1netails"
    origins: ${N1NETAILS_PASSKEY_ORIGINS:http://localhost:8080,http://localhost:9900,http://localhost:9901,http://localhost:4200}
    # Add all expected origins (frontend, API itself if serving UI pages that use WebAuthn)
    # For production, this would be e.g. "https://n1netails.com", "https://app.n1netails.com"

logging:
  level:
    org.springframework.security: INFO
app:
  ui-url: http://localhost:4200
